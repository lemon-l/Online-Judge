'''
Description
    问题描述
    　　有些西方人比较迷信，如果某个月的13号正好是星期五，他们就会觉得不太吉利，用古人的说法，就是“诸事不宜”。请你编写一个程序，统计出在某个特定的年份中，出现了多少次既是13号又是星期五的情形，以帮助你的迷信朋友解决难题。
    　　说明：（1）一年有365天，闰年有366天，所谓闰年，即能被4整除且不能被100整除的年份，或是既能被100整除也能被400整除的年份；（2）已知1998年1月1日是星期四，用户输入的年份肯定大于或等于1998年。
    　　输入格式：输入只有一行，即某个特定的年份（大于或等于1998年）。
    　　输出格式：输出只有一行，即在这一年中，出现了多少次既是13号又是星期五的情形。
    输入输出样例

Input
    输入描述:

    输入样例:
    1998

Output
    输出描述:

    输出样例:
    3
'''
n = int(input())
list1 = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
list2 = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]
sum1 = 0
# 判断是否为闰年
def leap_year(i):
    if((i % 4 == 0 and i % 100 != 0) or (i % 400 == 0 and i % 100 == 0)):
        day = 366
    else:
        day = 365 
    return day
# 判断每个月的13号是否为星期五
for _ in range(1998, n):
    sum1 += leap_year(_)
sum1 += 13
if(leap_year(n) == 365):
    for i in range(0, 11):
        print(sum1)
        if(sum1 % 7 == 1):
            print(i)
        sum1 += list1[i + 1]
elif(leap_year(n) == 366):
    for i in range(0, 12):
        sum1 += list2[i]
        # print(sum1)
        if(sum1 % 7 == 5):
            print(i - 1)

